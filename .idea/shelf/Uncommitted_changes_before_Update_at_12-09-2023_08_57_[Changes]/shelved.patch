Index: src/PodcastBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.awt.*;\r\n\r\nimport java.awt.event.ActionListener;\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URI;\r\nimport java.net.URL;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse.BodyHandlers;\r\nimport java.net.http.HttpResponse;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.JsonParser;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\n\r\n/* TODO\r\n * - Get channel by channel name\r\n * - Make class to switch space with %20 in search param string\r\n * - Make gui with which the user, ME!, can use.\r\n * - format\r\n * - comment\r\n */\r\n\r\npublic class PodcastBoard {\r\n    // EP = EndPoint\r\n    static String YOUTUBE_EP           = \"https://youtube.googleapis.com/youtube/v3/\";\r\n    static String SEARCH_EP            = YOUTUBE_EP + \"search?\";\r\n    static String CHANNEL_SEARCH_EP    = SEARCH_EP + \"type=channel\";\r\n    static String BY_CHANNEL_SEARCH_EP = SEARCH_EP + \"channelId=\";\r\n    static String PART_SNIPPET_EP      = \"&part=snippet\";\r\n    static String MAX_RESULTS_EP       = \"&maxResults=\";\r\n    static String ORDER_EP             = \"&order=\";\r\n    static String SEARCH_PARAM_EP      = \"&q=\";\r\n    static String API_KEY_EP           = \"&key=\";\r\n\r\n    static String ICON_PATH = \"resources/PodcastBoardIcon.png\";\r\n\r\n    static HttpClient httpClient = HttpClient.newHttpClient();\r\n\r\n    static String apiKey = \"\";\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        int width  = 800;\r\n        int height = 800;\r\n\r\n        PodcastBoard pb = new PodcastBoard();\r\n        pb.initProgram();\r\n\r\n        ArrayList<JPanel> podcastPanels = new ArrayList<>();\r\n\r\n        podcastPanels.add(pb.createPodcastPanel(\"Forehead Fables\", \"- Ep.\"));\r\n        podcastPanels.add(pb.createPodcastPanel(\"Linus Tech Tips\", \"WAN Show\"));\r\n\r\n\r\n        pb.setupGui(width, height, podcastPanels);\r\n    }\r\n\r\n\r\n    private void initProgram() {\r\n        String dirPAth = new File(\"\").getAbsolutePath();\r\n        apiKey = fileToStr(dirPAth + \"\\\\src\\\\resources\\\\API_KEY.txt\");\r\n        if (apiKey == null) System.exit(0);\r\n    }\r\n\r\n    public void removeLabel(JLabel label) {\r\n        Container parent = label.getParent();\r\n        parent.remove(label);\r\n        parent.validate();\r\n        parent.repaint();\r\n    }\r\n\r\n    // Taken from https://www.codejava.net/java-se/file-io/how-to-read-and-write-text-file-in-java\r\n    public static String fileToStr(String fileName) {\r\n        try {\r\n            FileReader reader = new FileReader(fileName);\r\n            BufferedReader bufferedReader = new BufferedReader(reader);\r\n\r\n            String lineStr;\r\n            String fileStr = \"\";\r\n\r\n            while ((lineStr = bufferedReader.readLine()) != null) {\r\n                fileStr += lineStr;\r\n            }\r\n            reader.close();\r\n            return fileStr;\r\n\r\n        } catch (IOException e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private JPanel createPodcastPanel(String channelName, String searchParam) throws Exception {\r\n        String searchChannelJson = searchChannelJson(channelName.replaceAll(\" \", \"%20\"));\r\n        println(searchChannelJson);\r\n        String channelId         = jsonByHitIndex(\"channelId\", 0, searchChannelJson);\r\n        println(channelId);\r\n        String videoJson         = searchVideoJson(searchParam.replaceAll(\" \", \"%20\"), channelId);\r\n        String thumbnailUrl      = jsonByHitIndex(\"url\", 2, videoJson);\r\n\r\n        Image image = imgFromWebPath(thumbnailUrl);\r\n        JLabel thumbnail  = makeImgLabel(500, 300, image);\r\n        JLabel videoTitle = new JLabel(jsonByHitIndex(\"title\", 0, videoJson));\r\n        videoTitle.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n\r\n        JPanel podcastEp  = new JPanel();\r\n        podcastEp.setLayout(new BoxLayout(podcastEp, BoxLayout.Y_AXIS));\r\n        podcastEp.add(thumbnail);\r\n        podcastEp.add(videoTitle);\r\n        return podcastEp;\r\n    }\r\n\r\n    public JLabel makeImgLabel(int width, int height, Image img) {\r\n        JLabel label = new JLabel();\r\n        label.setIcon(new ImageIcon(img.getScaledInstance(width, height, Image.SCALE_DEFAULT)));\r\n        return label;\r\n    }\r\n\r\n    public Image imgFromWebPath(String path) {\r\n        try {\r\n            URL url = new URL(path);\r\n            return ImageIO.read(url);\r\n        } catch (IOException e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public Image imgFromRelPath(String path) {\r\n        URL url = PodcastBoard.class.getResource(path);\r\n        return Toolkit.getDefaultToolkit().getImage(url);\r\n    }\r\n\r\n    private void setupGui(int width, int height, ArrayList<JPanel> podcastPanels) {\r\n        JFrame frame = new JFrame(\"Podcast Board\");\r\n        frame.setSize(width, height);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        JPanel cards = new JPanel();\r\n        frame.setLayout(new BorderLayout());\r\n\r\n        Image settingImage = imgFromRelPath(\"resources/settings_icon.png\").getScaledInstance(40, 40, Image.SCALE_DEFAULT);\r\n\r\n        JButton toPodcastsButton = new JButton(new ImageIcon(settingImage));\r\n        toPodcastsButton.setBorder(BorderFactory.createEmptyBorder());\r\n        toPodcastsButton.setContentAreaFilled(false);\r\n        JPanel podcastPanel  = new JPanel(new BorderLayout());\r\n        JPanel podcastPanelTop = new JPanel(new FlowLayout(FlowLayout.LEFT));\r\n        JPanel podcastPanelBot = new JPanel(new FlowLayout());\r\n        podcastPanel.add(podcastPanelTop, BorderLayout.NORTH);\r\n        podcastPanel.add(podcastPanelBot, BorderLayout.CENTER);\r\n\r\n        JButton toSettingsButton = new JButton(new ImageIcon(settingImage));\r\n        toSettingsButton.setBorder(BorderFactory.createEmptyBorder());\r\n        toSettingsButton.setContentAreaFilled(false);\r\n        JPanel settingsPanel = new JPanel(new BorderLayout());\r\n        JPanel settingsPanelTop = new JPanel(new FlowLayout(FlowLayout.LEFT));\r\n        JPanel settingsPanelBot = new JPanel(new FlowLayout());\r\n        settingsPanel.add(settingsPanelTop, BorderLayout.NORTH);\r\n        settingsPanel.add(settingsPanelBot, BorderLayout.CENTER);\r\n\r\n        podcastPanelTop.add(toSettingsButton);\r\n        settingsPanelTop.add(toPodcastsButton);\r\n\r\n        CardLayout cl = new CardLayout();\r\n        cards.setLayout(cl);\r\n\r\n        cards.add(podcastPanel, \"1\");\r\n        cards.add(settingsPanel, \"2\");\r\n        cl.show(cards, \"1\");\r\n\r\n        ActionListener switchButtonListner = e -> cl.next(cards);\r\n\r\n        toPodcastsButton.addActionListener(switchButtonListner);\r\n        toSettingsButton.addActionListener(switchButtonListner);\r\n\r\n        podcastPanels.forEach(podcastPanel::add);\r\n\r\n        frame.add(cards);\r\n\r\n        Image icon = imgFromRelPath(ICON_PATH);\r\n        frame.setIconImage(icon);\r\n        frame.setVisible(true);\r\n    }\r\n\r\n    public String jsonByHitIndex(String key, int index, String json) {\r\n        List<String> list = new ArrayList<>();\r\n        JsonParser jsonParser = new JsonParser();\r\n        check(key, jsonParser.parse(json), list);\r\n        return list.get(index).replaceAll(\"\\\"\", \"\");\r\n    }\r\n\r\n    public String getRequestJson(String uriStr) throws Exception {\r\n        HttpRequest getRequest = HttpRequest.newBuilder()\r\n                .uri(new URI( uriStr))\r\n                .build();\r\n        HttpResponse<String> getResponse = httpClient.send(getRequest, BodyHandlers.ofString());\r\n\r\n        return getResponse.body();\r\n    }\r\n\r\n\r\n    public String searchVideoJson(String searchParam, String channelId) throws Exception {\r\n        String maxResults = \"1\";\r\n        String order = \"date\";\r\n        return getRequestJson(BY_CHANNEL_SEARCH_EP + channelId +\r\n                        MAX_RESULTS_EP + maxResults +\r\n                        ORDER_EP + order +\r\n                        SEARCH_PARAM_EP + searchParam +\r\n                        PART_SNIPPET_EP +\r\n                        API_KEY_EP + apiKey);\r\n    }\r\n\r\n    public String searchChannelJson(String channelName) throws Exception {\r\n        String maxResults = \"1\";\r\n        return getRequestJson(CHANNEL_SEARCH_EP +\r\n                        MAX_RESULTS_EP + maxResults +\r\n                        SEARCH_PARAM_EP + channelName +\r\n                        API_KEY_EP + apiKey);\r\n    }\r\n\r\n    // Taken from Safwan Hijazi on stack overflow\r\n    // https://stackoverflow.com/a/31158468\r\n    private static void check(String key, JsonElement jsonElement, List<String> list) {\r\n\r\n        if (jsonElement.isJsonArray()) {\r\n            for (JsonElement jsonElement1 : jsonElement.getAsJsonArray()) {\r\n                check(key, jsonElement1, list);\r\n            }\r\n        } else {\r\n            if (jsonElement.isJsonObject()) {\r\n                Set<Map.Entry<String, JsonElement>> entrySet = jsonElement\r\n                        .getAsJsonObject().entrySet();\r\n                for (Map.Entry<String, JsonElement> entry : entrySet) {\r\n                    String key1 = entry.getKey();\r\n                    if (key1.equals(key)) {\r\n                        list.add(entry.getValue().toString());\r\n                    }\r\n                    check(key, entry.getValue(), list);\r\n                }\r\n            } else {\r\n                if (jsonElement.toString().equals(key)) {\r\n                    list.add(jsonElement.toString());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void println(Object e) {\r\n        System.out.println(e.toString());\r\n    }\r\n\r\n    public static void print(Object e) {\r\n        System.out.print(e.toString());\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/PodcastBoard.java b/src/PodcastBoard.java
--- a/src/PodcastBoard.java	(revision 53f35452fb3674f2636867fd8448de842fb0f9ce)
+++ b/src/PodcastBoard.java	(date 1694371075766)
@@ -59,8 +59,8 @@
 
         ArrayList<JPanel> podcastPanels = new ArrayList<>();
 
-        podcastPanels.add(pb.createPodcastPanel("Forehead Fables", "- Ep."));
-        podcastPanels.add(pb.createPodcastPanel("Linus Tech Tips", "WAN Show"));
+        //podcastPanels.add(pb.createPodcastPanel("Forehead Fables", "- Ep."));
+        //podcastPanels.add(pb.createPodcastPanel("Linus Tech Tips", "WAN Show"));
 
 
         pb.setupGui(width, height, podcastPanels);
